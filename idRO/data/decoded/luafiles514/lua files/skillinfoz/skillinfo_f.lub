-- Decompiled using luadec 2.2 rev: 895d923 for Lua 5.1 from https://github.com/viruscamp/luadec
-- Command line: .\data\luafiles514\lua files\skillinfoz\skillinfo_f.lub 

-- params : ...
-- function num : 0
GetInheritJob = function(job)
  -- function num : 0_0
  JobInheritTable = nil
  JobInheritTable = {}
  if job == nil then
    return nil
  end
  local i = 0
  while job ~= nil do
    i = i + 1
    -- DECOMPILER ERROR at PC12: Confused about usage of register: R2 in 'UnsetPending'

    JobInheritTable[i] = job
    job = JOB_INHERIT_LIST[job]
  end
  return i
end

All_NeedSkillList = {}
CheckNeedSkillList = function(skillInfo, skillDepth)
  -- function num : 0_1
  if All_NeedSkillList ~= nil and skillInfo ~= nil then
    local depth = 0
    while All_NeedSkillList[depth] do
      local idx = 1
      t_skillInfo = (All_NeedSkillList[depth])[idx]
      while t_skillInfo do
        if t_skillInfo[1] == skillInfo[1] then
          if depth < skillDepth then
            return false
          end
          -- DECOMPILER ERROR at PC34: Confused about usage of register: R4 in 'UnsetPending'

          if t_skillInfo[2] < skillInfo[2] then
            (All_NeedSkillList[depth])[idx] = skillInfo
          end
          return true
        end
        idx = idx + 1
        t_skillInfo = (All_NeedSkillList[depth])[idx]
      end
      depth = depth + 1
    end
  end
  do
    return false
  end
end

SetNeedSkillList = function(SKID, depth)
  -- function num : 0_2
  local skillInfo = SKILL_INFO_LIST[SKID]
  if skillInfo ~= nill then
    local bIsNeedSkillList = false
    local needSkillList = skillInfo.NeedSkillList
    if needSkillList ~= nil then
      for j,k in pairs(JobInheritTable) do
        local jobID = JOB_INHERIT_LIST2[k]
        if jobID ~= -1 and jobID ~= nil then
          k = jobID
        end
        if needSkillList[k] ~= nil then
          needSkillList = needSkillList[k]
          bIsNeedSkillList = true
          break
        end
      end
    end
    do
      if bIsNeedSkillList == false then
        needSkillList = skillInfo._NeedSkillList
      end
      if needSkillList ~= nil then
        for idx,skill in pairs(needSkillList) do
          if CheckNeedSkillList(skill, depth) == false then
            local listSize = 0
            -- DECOMPILER ERROR at PC50: Confused about usage of register: R11 in 'UnsetPending'

            if All_NeedSkillList[depth] == nil then
              All_NeedSkillList[depth] = {}
            else
              listSize = getTableSize(All_NeedSkillList[depth])
            end
            -- DECOMPILER ERROR at PC60: Confused about usage of register: R11 in 'UnsetPending'

            ;
            (All_NeedSkillList[depth])[listSize + 1] = skill
            SetNeedSkillList(skill[1], depth + 1)
          end
        end
      end
    end
  end
end

GetSkillInfo = function(SKID)
  -- function num : 0_3
  All_NeedSkillList = nil
  All_NeedSkillList = {}
  local skillInfo = SKILL_INFO_LIST[SKID]
  if skillInfo ~= nill then
    local strSkillID = skillInfo[1]
    local strSkillName = skillInfo.SkillName
    local MaxLv = skillInfo.MaxLv
    local UserUpgradable = 1
    if skillInfo.Type == "Quest" or skillInfo.Type == "Soul" then
      UserUpgradable = 0
    end
    SetNeedSkillList(SKID, 0)
    return strSkillID, strSkillName, MaxLv, UserUpgradable
  end
  do
    return "", "", -1, -1
  end
end

AddNeedSkillList = function(SKID)
  -- function num : 0_4
  if All_NeedSkillList ~= nil then
    local depth = 0
    while All_NeedSkillList[depth] do
      local idx = 1
      skillInfo = (All_NeedSkillList[depth])[idx]
      while 1 do
        -- DECOMPILER ERROR at PC21: Confused about usage of register: R3 in 'UnsetPending'

        if skillInfo then
          if skillInfo[2] == nil then
            skillInfo[2] = 0
          end
          c_AddNeedSkillList(SKID, skillInfo[1], skillInfo[2])
          idx = idx + 1
          skillInfo = (All_NeedSkillList[depth])[idx]
          -- DECOMPILER ERROR at PC34: LeaveBlock: unexpected jumping out IF_THEN_STMT

          -- DECOMPILER ERROR at PC34: LeaveBlock: unexpected jumping out IF_STMT

        end
      end
      depth = depth + 1
    end
  end
end

InitSkillTreeView = function(jobID, arrayNum)
  -- function num : 0_5
  local skillList = SKILL_TREEVIEW_FOR_JOB[jobID]
  if skillList ~= nil then
    local skillPos = 0
    local listSize = getTableSize(skillList)
    while 1 do
      if listSize > 0 then
        local skillID = skillList[skillPos]
        do
          do
            if skillID ~= nil then
              local strSkillID, strSkillName, MaxLv, UserUpgradable = GetSkillInfo(skillID)
              if strSkillID ~= nil and strSkillID ~= "" then
                c_AddSkillList(arrayNum, skillID, strSkillID, skillPos, MaxLv, UserUpgradable)
                AddNeedSkillList(skillID)
              end
              listSize = listSize - 1
            end
            skillPos = skillPos + 1
            -- DECOMPILER ERROR at PC33: LeaveBlock: unexpected jumping out DO_STMT

            -- DECOMPILER ERROR at PC33: LeaveBlock: unexpected jumping out IF_THEN_STMT

            -- DECOMPILER ERROR at PC33: LeaveBlock: unexpected jumping out IF_STMT

          end
        end
      end
    end
  end
end

GetSkillIdName = function(SkillID)
  -- function num : 0_6
  local obj = SKILL_INFO_LIST[SkillID]
  if obj ~= nil then
    obj = (SKILL_INFO_LIST[SkillID])[1]
  end
  if obj ~= nil then
    return obj
  end
  return ""
end

GetSkillName = function(SkillID)
  -- function num : 0_7
  local obj = SKILL_INFO_LIST[SkillID]
  if obj ~= nil then
    obj = (SKILL_INFO_LIST[SkillID]).SkillName
  end
  if obj ~= nil then
    return obj
  end
  return ""
end

IsLevelUseSkill = function(SkillID)
  -- function num : 0_8
  local skillInfo = SKILL_INFO_LIST[SkillID]
  local rst = nil
  if skillInfo ~= nil then
    rst = skillInfo.bSeperateLv
    if rst ~= nil then
      return rst
    end
    local spAmount = skillInfo.SpAmount
    if spAmount ~= nil then
      return true
    end
  end
  do
    return false
  end
end

GetLevelUseSpAmount = function(SkillID, idx)
  -- function num : 0_9
  local obj = SKILL_INFO_LIST[SkillID]
  if obj ~= nil then
    obj = (SKILL_INFO_LIST[SkillID]).SpAmount
  end
  if obj ~= nil then
    obj = ((SKILL_INFO_LIST[SkillID]).SpAmount)[idx]
  end
  if obj ~= nil then
    return obj
  end
  return 0
end

GetSkillDescript = function(JobID, SKID, bChangeColor)
  -- function num : 0_10
  local descript = ""
  local obj = SKILL_DESCRIPT[SKID]
  if obj ~= nil then
    for i,v in pairs(obj) do
      s_pos = (string.find)(v, MsgStrID.MSI_SKILL_REQUIREMENTS)
      bCopyText = false
      if s_pos ~= nil then
        s_pos = s_pos - 1
        subStr = (string.sub)(v, 1, s_pos - 1)
        do
          if bChangeColor == 1 then
            local temp = subStr .. "^FF1493" .. (string.sub)(v, s_pos + 7, -1)
            v = temp
          end
          if s_pos > 1 then
            for j,k in pairs(JobInheritTable) do
              if subStr == (string.format)("%d", k) then
                descript = descript .. (string.sub)(v, s_pos, -1)
                descript = descript .. "\r\n"
                break
              end
            end
          else
            do
              do
                bCopyText = true
                bCopyText = true
                if bCopyText == true then
                  descript = descript .. v
                  descript = descript .. "\r\n"
                end
                -- DECOMPILER ERROR at PC90: LeaveBlock: unexpected jumping out DO_STMT

                -- DECOMPILER ERROR at PC90: LeaveBlock: unexpected jumping out IF_ELSE_STMT

                -- DECOMPILER ERROR at PC90: LeaveBlock: unexpected jumping out IF_STMT

                -- DECOMPILER ERROR at PC90: LeaveBlock: unexpected jumping out DO_STMT

                -- DECOMPILER ERROR at PC90: LeaveBlock: unexpected jumping out IF_THEN_STMT

                -- DECOMPILER ERROR at PC90: LeaveBlock: unexpected jumping out IF_STMT

              end
            end
          end
        end
      end
    end
  end
  return descript
end

TestFile = function(saveFileName)
  -- function num : 0_11
  saveFile = (io.open)(saveFileName, "w")
  if saveFile ~= nil and All_NeedSkillList ~= nil then
    local depth = 0
    while All_NeedSkillList[depth] do
      local idx = 1
      skillInfo = (All_NeedSkillList[depth])[idx]
      while skillInfo do
        saveFile:write((string.format)("[%d,%d]\n", skillInfo[1], skillInfo[2]))
        idx = idx + 1
        skillInfo = (All_NeedSkillList[depth])[idx]
      end
      depth = depth + 1
    end
  end
  do
    ;
    (io.close)(saveFile)
  end
end

GetSkillAttackRange = function(in_SKID, in_Level, in_curMaxLv)
  -- function num : 0_12
  local attackRange = 1
  local attackRangeOfMaxLv = 0
  local maxLv = 0
  local obj = SKILL_INFO_LIST[in_SKID]
  if obj ~= nil then
    obj = (SKILL_INFO_LIST[in_SKID]).AttackRange
    maxLv = (SKILL_INFO_LIST[in_SKID]).MaxLv
  end
  if obj ~= nil then
    attackRange = ((SKILL_INFO_LIST[in_SKID]).AttackRange)[in_Level]
  end
  if in_curMaxLv == nil then
    in_curMaxLv = maxLv
  end
  if maxLv ~= nil and maxLv < in_curMaxLv then
    in_curMaxLv = maxLv
  end
  attackRangeOfMaxLv = ((SKILL_INFO_LIST[in_SKID]).AttackRange)[in_curMaxLv]
  if attackRangeOfMaxLv == nil then
    attackRangeOfMaxLv = 0
  end
  if attackRange ~= nil then
    return attackRange, attackRangeOfMaxLv
  end
  return 1, attackRangeOfMaxLv
end

GetSkillScale = function(in_SKID, in_Level)
  -- function num : 0_13
  local obj = SKILL_INFO_LIST[in_SKID]
  local x = 0
  local y = 0
  if obj ~= nil then
    obj = (SKILL_INFO_LIST[in_SKID]).SkillScale
  end
  if obj ~= nil then
    obj = ((SKILL_INFO_LIST[in_SKID]).SkillScale)[in_Level]
  end
  if obj ~= nil then
    x = (((SKILL_INFO_LIST[in_SKID]).SkillScale)[in_Level]).x
    if x == nil then
      return 0, 0
    end
    y = (((SKILL_INFO_LIST[in_SKID]).SkillScale)[in_Level]).y
    if y == nil then
      return 0, 0
    end
  end
  return x, y
end

JobSkillTab = {}
-- DECOMPILER ERROR at PC34: Confused about usage of register: R0 in 'UnsetPending'

JobSkillTab.ChangeSkillTabName = function(in_job, in_1sttab, in_2ndtab, in_3rdtab)
  -- function num : 0_14
  local tbl = {job = in_job, TabName1st = in_1sttab, TabName2nd = in_2ndtab, TabName3rd = in_3rdtab}
  -- DECOMPILER ERROR at PC9: Confused about usage of register: R5 in 'UnsetPending'

  JobSkillTab[#JobSkillTab + 1] = tbl
end

JobSkillTab_GetTabName = function(in_job)
  -- function num : 0_15
  if JobSkillTab == nil then
    return nil
  end
  local size = #JobSkillTab
  for seq = 1, size do
    if in_job == (JobSkillTab[seq]).job then
      return (JobSkillTab[seq]).TabName1st, (JobSkillTab[seq]).TabName2nd, (JobSkillTab[seq]).TabName3rd
    end
  end
end


